.static-map(@size: 200px, @b: 0, @angle: 45deg, @perspective: 200px) {
    position: relative;
    display:  block;
    width:   @size;
    
    @padding: 4px;
    top:    -@padding;
    left:   -@padding;
    padding: @padding;
    
    .static-map-inner {
        margin: 0 auto;
        @colsize: @size / 4;
        
        position: relative;
        top:  0;
        left: -@b;
        
        display: block;
        width:  @size;
        height: @size;
        
        ._section(@x) {
            /* note: background-image is expected to be overridden via 
             * an inline style on each section element */
            background-position: -(@x * @colsize);
            
            position: absolute;
            display:  block;
            
            width:  @colsize;
            height: @size;
            
            top: 0;
            border: @b solid #fff;
            
            .transition-transform(.1s, linear);
        }
        
        .__section(@x) when (@x > 0) {
            left: @x * @colsize + @b * 2;
        }
        .__section(@x) when (@x = 0) {
            left: @x * @colsize + @b;
        }
        
        .section(@x) {
            ._section(@x);
            .__section(@x);
        }
        
        .r0 {
            .section(0);
            
            border-width: @b 0 @b @b;
            .transform(perspective(@perspective) translate(12px, 0) rotateY(-@angle));
        }
        
        .r1 {
            .section(1);
            
            border-width: @b 0;
            .transform(perspective(@perspective) translate(7px,  0) rotateY(@angle));

        }
        
        .r2 {
            .section(2);
            
            border-width: @b 0;
            .transform(perspective(@perspective) translate(-1px, 0) rotateY(-@angle));
        }
        
        .r3 {
            .section(3);
            
            border-width: @b @b @b 0;
            .transform(perspective(@perspective) translate(-6px, 0) rotateY(@angle));
        }
        
        .dark-layer {
            display: block;
            width:  100%;
            height: 100%;
            background: #333;
            opacity: 0.1;
            
            .transition(opacity, .1s, ease-in-out);
        }
        
        .pin {
            background: url(/assets/img/pin_shadow.png);
            
            position: absolute;
            top:  50%;
            left: 50%;
            margin: -7px auto auto 0;
            
            display: block;
            width:  24px;
            height: 18px;
            
            &:hover {
                cursor: pointer;
            }
            
            .pin-inner {
                background: url(/assets/img/pin.png);
                
                position: relative;
                top:  -16px;
                left: -8px;
                
                display: block;
                width:  26px;
                height: 36px;
            }
            
            .transform(perspective(@perspective) translate(-2px, 0) scale(.8, .8));
            .transition-transform(.1s, linear);
        }
    }
    
    &:hover {
        .r0, .r1, .r2, .r3, .pin {
            .transform(perspective(@perspective));
        }
        
        .dark-layer {
            opacity: 0;
        }
    }
}

.static-map-small {
    .static-map(140px, 2px, 35deg, 200px);
}

/* helpers */

.transition-transform(@duration0: 0.2s, @ease0: ease-out) {
    -webkit-transition: -webkit-transform @duration0 @ease0;
    -moz-transition:    -moz-transform    @duration0 @ease0;
    -ms-transition:     -ms-transform     @duration0 @ease0;
    -o-transition:      -o-transform      @duration0 @ease0;
    transition:         transform         @duration0 @ease0;
}

.transform(@args) {
    -webkit-transform: @args;
       -moz-transform: @args;
         -o-transform: @args;
        -ms-transform: @args;
            transform: @args;
}

.transition(@target: all, @duration: 0.2s, @ease: ease-out) {
    -webkit-transition: @target @duration @ease;
    -moz-transition:    @target @duration @ease;
    -ms-transition:     @target @duration @ease;
    -o-transition:      @target @duration @ease;
    transition:         @target @duration @ease;
}
